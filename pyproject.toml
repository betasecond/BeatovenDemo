[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "beatoven-ai"
version = "0.1.0"
description = "AI music generation using Beatoven.ai API"
readme = "README.md"
authors = [
    {name = "MOFA Project"}
]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Multimedia :: Sound/Audio :: Conversion",
    "Topic :: Multimedia :: Sound/Audio :: MIDI",
]

dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.0",
    "black>=23.0.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/yourusername/beatoven-ai/issues"
"Documentation" = "https://github.com/yourusername/beatoven-ai#readme"

[project.scripts]
beatoven = "beatoven_ai.beatoven_ai.cli:main"

[tool.ruff]
# Enable pycodestyle (E), Pyflakes (F), isort (I), and more
select = ["E", "F", "I", "N", "UP", "B", "C4", "SIM", "TCH", "PT"]
ignore = []

# Same as Black
line-length = 100
indent-width = 4
target-version = "py38"

# Exclude directories
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "build",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]  # Allow imports not at the top in __init__.py
"tests/*" = ["E501"]  # Allow long lines in tests

[tool.ruff.isort]
known-first-party = ["beatoven_ai"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.black]
line-length = 100
target-version = ["py38"]
preview = true

[tool.coverage.run]
source = ["beatoven_ai"]
omit = ["tests/*"]

[tool.uv]
index-url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
